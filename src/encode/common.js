const MAX_DATA_CODEWORD_TABLE = [[17,14,11,7],[32,26,20,14],[53,42,32,24],[78,62,46,34],[106,84,60,44],[134,106,74,58],[154,122,86,64],[192,152,108,84],[230,180,130,98],[271,213,151,119],[321,251,177,137],[367,287,203,155],[425,331,241,177],[458,362,258,194],[520,412,292,220],[586,450,322,250],[644,504,364,280],[718,560,394,310],[792,624,442,338],[858,666,482,382],[929,711,509,403],[1003,779,565,439],[1091,857,611,461],[1171,911,661,511],[1273,997,715,535],[1367,1059,751,593],[1465,1125,805,625],[1528,1190,868,658],[1628,1264,908,698],[1732,1370,982,742],[1840,1452,1030,790],[1952,1538,1112,842],[2068,1628,1168,898],[2188,1722,1228,958],[2303,1809,1283,983],[2431,1911,1351,1051],[2563,1989,1423,1093],[2699,2099,1499,1139],[2809,2213,1579,1219],[2953,2331,1663,1273]]
const RS_BLOCK_TABLE = [[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]]
const complementCodes = ['0b11101100', '0b00010001']
const viDict = { 7: '000111110010010100', 8: '001000010110111100', 9: '001001101010011001', 10: '001010010011010011', 11: '001011101111110110', 12: '001100011101100010', 13: '001101100001000111', 14: '001110011000001101', 15: '001111100100101000', 16: '010000101101111000', 17: '010001010001011101', 18: '010010101000010111', 19: '010011010100110010', 20: '010100100110100110', 21: '010101011010000011', 22: '010110100011001001', 23: '010111011111101100', 24: '011000111011000100', 25: '011001000111100001', 26: '011010111110101011', 27: '011011000010001110', 28: '011100110000011010', 29: '011101001100111111', 30: '011110110101110101', 31: '011111001001010000', 32: '100000100111010101', 33: '100001011011110000', 34: '100010100010111010', 35: '100011011110011111', 36: '100100101100001011', 37: '100101010000101110', 38: '100110101001100100', 39: '100111010101000001', 40: '101000110001101001' }
const fiDict = { 0: '101010000010010', 1: '101000100100101', 2: '101111001111100', 3: '101101101001011', 4: '100010111111001', 5: '100000011001110', 6: '100111110010111', 7: '100101010100000', 8: '111011111000100', 9: '111001011110011', 10: '111110110101010', 11: '111100010011101', 12: '110011000101111', 13: '110001100011000', 14: '110110001000001', 15: '110100101110110', 16: '001011010001001', 17: '001001110111110', 18: '001110011100111', 19: '001100111010000', 20: '000011101100010', 21: '000001001010101', 22: '000110100001100', 23: '000100000111011', 24: '011010101011111', 25: '011000001101000', 26: '011111100110001', 27: '011101000000110', 28: '010010010110100', 29: '010000110000011', 30: '010111011011010', 31: '010101111101101' }
const ECLs = {
  'L': '01',
  'M': '00',
  'Q': '11',
  'H': '10'
}

const reminderBits = function (version) {
  if (version >= 2 && version <= 6) {
    return '0000000'
  } else if (version >= 14 && version <= 20 || version >= 28 && version <= 34) {
    return '000'
  } else if (version >= 21 && version <= 27) {
    return '0000'
  } else {
    return ''
  }
}

const getPaddingBytes = function (binarys, maxDc) {
  var padding = maxDc - (binarys.length / 8)
  var paddingBytes = []
  while (padding--) {
    paddingBytes.push(complementCodes[padding % 2])
  }
  return paddingBytes
}

const getDataCodewords = function (binarys, maxDc) {
  let result = []
  let length = binarys.length
  while (length > 0) {
    result.push('0b' + binarys.slice(result.length * 8, result.length * 8 + 8))
    length -= 8
  }
  return result.concat(getPaddingBytes(binarys, maxDc))
}
export { MAX_DATA_CODEWORD_TABLE, RS_BLOCK_TABLE, getDataCodewords, reminderBits, ECLs, viDict, fiDict }